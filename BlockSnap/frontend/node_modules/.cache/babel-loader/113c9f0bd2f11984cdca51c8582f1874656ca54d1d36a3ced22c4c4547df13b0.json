{"ast":null,"code":"var _jsxFileName = \"/home/hrithik/scratch_proj/BlockSnap/frontend/src/pages/CameraView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from 'react';\nimport { Box, Button, VStack, HStack, Text, useToast, Image, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalFooter, useDisclosure } from '@chakra-ui/react';\nimport Webcam from 'react-webcam';\nimport { useWeb3React } from '@web3-react/core';\nimport { MdCamera, MdRefresh } from 'react-icons/md';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraView() {\n  _s();\n  const webcamRef = useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    account,\n    active\n  } = useWeb3React();\n  const toast = useToast();\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    onOpen();\n  }, [webcamRef, onOpen]);\n  const handleSave = async () => {\n    if (!active) {\n      toast({\n        title: 'Wallet not connected',\n        description: 'Please connect your MetaMask wallet first.',\n        status: 'error',\n        duration: 5000\n      });\n      return;\n    }\n    try {\n      // Convert base64 to blob\n      const response = await fetch(imgSrc);\n      const blob = await response.blob();\n\n      // Send to backend\n      const result = await axios.post('http://localhost:5000/capture', {\n        wallet_address: account,\n        image_data: imgSrc\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      toast({\n        title: 'Success!',\n        description: `Image captured and minted as NFT. Token ID: ${result.data.data.token_id}`,\n        status: 'success',\n        duration: 5000\n      });\n      onClose();\n      setImgSrc(null);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message,\n        status: 'error',\n        duration: 5000\n      });\n    }\n  };\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        maxW: \"1280px\",\n        h: \"720px\",\n        bg: \"gray.800\",\n        borderRadius: \"lg\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: false,\n          ref: webcamRef,\n          screenshotFormat: \"image/jpeg\",\n          videoConstraints: videoConstraints,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          bottom: \"4\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              leftIcon: /*#__PURE__*/_jsxDEV(MdCamera, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 27\n              }, this),\n              colorScheme: \"blue\",\n              size: \"lg\",\n              onClick: capture,\n              children: \"Capture Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              leftIcon: /*#__PURE__*/_jsxDEV(MdRefresh, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 27\n              }, this),\n              colorScheme: \"gray\",\n              size: \"lg\",\n              onClick: () => setImgSrc(null),\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.400\",\n        children: active ? 'Click capture to take a photo and mint it as an NFT' : 'Please connect your wallet to mint NFTs'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      size: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        bg: \"gray.800\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          color: \"white\",\n          children: \"Preview Capture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: imgSrc,\n            alt: \"Captured\",\n            borderRadius: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: handleSave,\n            children: \"Save & Mint NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            onClick: onClose,\n            color: \"white\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraView, \"rw3sm/EfWtrZoZgYUeHCXtGjdlk=\", false, function () {\n  return [useDisclosure, useWeb3React, useToast];\n});\n_c = CameraView;\nexport default CameraView;\nvar _c;\n$RefreshReg$(_c, \"CameraView\");","map":{"version":3,"names":["React","useRef","useState","useCallback","Box","Button","VStack","HStack","Text","useToast","Image","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalFooter","useDisclosure","Webcam","useWeb3React","MdCamera","MdRefresh","axios","jsxDEV","_jsxDEV","CameraView","_s","webcamRef","imgSrc","setImgSrc","isOpen","onOpen","onClose","account","active","toast","capture","imageSrc","current","getScreenshot","handleSave","title","description","status","duration","response","fetch","blob","result","post","wallet_address","image_data","headers","data","token_id","error","message","videoConstraints","width","height","facingMode","children","spacing","align","w","maxW","h","bg","borderRadius","overflow","position","audio","ref","screenshotFormat","style","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","bottom","left","transform","leftIcon","colorScheme","size","onClick","color","src","alt","mr","variant","_c","$RefreshReg$"],"sources":["/home/hrithik/scratch_proj/BlockSnap/frontend/src/pages/CameraView.js"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\nimport {\n  Box,\n  Button,\n  VStack,\n  HStack,\n  Text,\n  useToast,\n  Image,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport Webcam from 'react-webcam';\nimport { useWeb3React } from '@web3-react/core';\nimport { MdCamera, MdRefresh } from 'react-icons/md';\nimport axios from 'axios';\n\nfunction CameraView() {\n  const webcamRef = useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { account, active } = useWeb3React();\n  const toast = useToast();\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    onOpen();\n  }, [webcamRef, onOpen]);\n\n  const handleSave = async () => {\n    if (!active) {\n      toast({\n        title: 'Wallet not connected',\n        description: 'Please connect your MetaMask wallet first.',\n        status: 'error',\n        duration: 5000,\n      });\n      return;\n    }\n\n    try {\n      // Convert base64 to blob\n      const response = await fetch(imgSrc);\n      const blob = await response.blob();\n\n      // Send to backend\n      const result = await axios.post('http://localhost:5000/capture', {\n        wallet_address: account,\n        image_data: imgSrc\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      toast({\n        title: 'Success!',\n        description: `Image captured and minted as NFT. Token ID: ${result.data.data.token_id}`,\n        status: 'success',\n        duration: 5000,\n      });\n\n      onClose();\n      setImgSrc(null);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message,\n        status: 'error',\n        duration: 5000,\n      });\n    }\n  };\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n  };\n\n  return (\n    <Box>\n      <VStack spacing={8} align=\"center\">\n        <Box\n          w=\"100%\"\n          maxW=\"1280px\"\n          h=\"720px\"\n          bg=\"gray.800\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n          position=\"relative\"\n        >\n          <Webcam\n            audio={false}\n            ref={webcamRef}\n            screenshotFormat=\"image/jpeg\"\n            videoConstraints={videoConstraints}\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n            }}\n          />\n          <Box\n            position=\"absolute\"\n            bottom=\"4\"\n            left=\"50%\"\n            transform=\"translateX(-50%)\"\n          >\n            <HStack spacing={4}>\n              <Button\n                leftIcon={<MdCamera />}\n                colorScheme=\"blue\"\n                size=\"lg\"\n                onClick={capture}\n              >\n                Capture Photo\n              </Button>\n              <Button\n                leftIcon={<MdRefresh />}\n                colorScheme=\"gray\"\n                size=\"lg\"\n                onClick={() => setImgSrc(null)}\n              >\n                Reset\n              </Button>\n            </HStack>\n          </Box>\n        </Box>\n\n        <Text color=\"gray.400\">\n          {active\n            ? 'Click capture to take a photo and mint it as an NFT'\n            : 'Please connect your wallet to mint NFTs'}\n        </Text>\n      </VStack>\n\n      <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent bg=\"gray.800\">\n          <ModalHeader color=\"white\">Preview Capture</ModalHeader>\n          <ModalBody>\n            <Image src={imgSrc} alt=\"Captured\" borderRadius=\"md\" />\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={handleSave}>\n              Save & Mint NFT\n            </Button>\n            <Button variant=\"ghost\" onClick={onClose} color=\"white\">\n              Cancel\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n}\n\nexport default CameraView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}