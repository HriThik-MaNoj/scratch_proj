{"ast":null,"code":"var _jsxFileName = \"/home/hrithik/scratch_proj/BlockSnap/frontend/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Flex, Button, Text, useColorModeValue, HStack, Menu, MenuButton, MenuList, MenuItem, useToast } from '@chakra-ui/react';\nimport { useWeb3React } from '@web3-react/core';\nimport { injected, networkConfig } from '../utils/connectors';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const {\n    active,\n    account,\n    activate,\n    deactivate\n  } = useWeb3React();\n  const toast = useToast();\n  const connectWallet = async () => {\n    console.log('Attempting to connect wallet...');\n    try {\n      // Check if MetaMask is installed\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to connect your wallet');\n      }\n\n      // Try to switch to BuildBear network first\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: networkConfig.chainId\n          }]\n        });\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [networkConfig]\n            });\n          } catch (addError) {\n            throw new Error('Failed to add BuildBear network to MetaMask');\n          }\n        } else {\n          throw new Error('Failed to switch to BuildBear network');\n        }\n      }\n\n      // Activate the injected connector (MetaMask)\n      await activate(injected);\n      toast({\n        title: 'Wallet Connected',\n        description: 'Your wallet has been successfully connected!',\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Failed to connect:', error);\n      toast({\n        title: 'Connection Failed',\n        description: error.message || 'Failed to connect wallet',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  const disconnectWallet = async () => {\n    try {\n      deactivate();\n      toast({\n        title: 'Wallet Disconnected',\n        description: 'Your wallet has been disconnected',\n        status: 'info',\n        duration: 5000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Failed to disconnect:', error);\n      toast({\n        title: 'Disconnection Failed',\n        description: 'Failed to disconnect wallet',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: useColorModeValue('gray.100', 'gray.900'),\n    px: 4,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      h: 16,\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        children: \"BlockSnap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 8,\n        alignItems: 'center',\n        children: active ? /*#__PURE__*/_jsxDEV(Menu, {\n          children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n            as: Button,\n            rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 50\n            }, this),\n            children: account ? `${account.substring(0, 6)}...${account.substring(38)}` : 'Connected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n            children: /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: disconnectWallet,\n              children: \"Disconnect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: connectWallet,\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"RS3XDlOmyB14fvcHJx/nv7puTyo=\", false, function () {\n  return [useWeb3React, useToast, useColorModeValue];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","Box","Flex","Button","Text","useColorModeValue","HStack","Menu","MenuButton","MenuList","MenuItem","useToast","useWeb3React","injected","networkConfig","ChevronDownIcon","jsxDEV","_jsxDEV","Navbar","_s","active","account","activate","deactivate","toast","connectWallet","console","log","window","ethereum","Error","request","method","params","chainId","switchError","code","addError","title","description","status","duration","isClosable","error","message","disconnectWallet","bg","px","children","h","alignItems","justifyContent","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","spacing","as","rightIcon","substring","onClick","_c","$RefreshReg$"],"sources":["/home/hrithik/scratch_proj/BlockSnap/frontend/src/components/Navbar.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Flex,\n  Button,\n  Text,\n  useColorModeValue,\n  HStack,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  useToast,\n} from '@chakra-ui/react';\nimport { useWeb3React } from '@web3-react/core';\nimport { injected, networkConfig } from '../utils/connectors';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\n\nfunction Navbar() {\n  const { active, account, activate, deactivate } = useWeb3React();\n  const toast = useToast();\n\n  const connectWallet = async () => {\n    console.log('Attempting to connect wallet...');\n    try {\n      // Check if MetaMask is installed\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to connect your wallet');\n      }\n\n      // Try to switch to BuildBear network first\n      try {\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: networkConfig.chainId }],\n        });\n      } catch (switchError) {\n        // This error code indicates that the chain has not been added to MetaMask\n        if (switchError.code === 4902) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_addEthereumChain',\n              params: [networkConfig],\n            });\n          } catch (addError) {\n            throw new Error('Failed to add BuildBear network to MetaMask');\n          }\n        } else {\n          throw new Error('Failed to switch to BuildBear network');\n        }\n      }\n\n      // Activate the injected connector (MetaMask)\n      await activate(injected);\n      toast({\n        title: 'Wallet Connected',\n        description: 'Your wallet has been successfully connected!',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Failed to connect:', error);\n      toast({\n        title: 'Connection Failed',\n        description: error.message || 'Failed to connect wallet',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const disconnectWallet = async () => {\n    try {\n      deactivate();\n      toast({\n        title: 'Wallet Disconnected',\n        description: 'Your wallet has been disconnected',\n        status: 'info',\n        duration: 5000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Failed to disconnect:', error);\n      toast({\n        title: 'Disconnection Failed',\n        description: 'Failed to disconnect wallet',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\n      <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n        <Text fontSize=\"xl\" fontWeight=\"bold\">\n          BlockSnap\n        </Text>\n        <HStack spacing={8} alignItems={'center'}>\n          {active ? (\n            <Menu>\n              <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\n                {account ? `${account.substring(0, 6)}...${account.substring(38)}` : 'Connected'}\n              </MenuButton>\n              <MenuList>\n                <MenuItem onClick={disconnectWallet}>Disconnect</MenuItem>\n              </MenuList>\n            </Menu>\n          ) : (\n            <Button onClick={connectWallet}>Connect Wallet</Button>\n          )}\n        </HStack>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}