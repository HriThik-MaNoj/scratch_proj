{"ast":null,"code":"var _jsxFileName = \"/home/hrithik/scratch_proj/BlockSnap/frontend/src/pages/DashcamView.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Box, Button, VStack, HStack, Text, useToast, Progress, Badge } from '@chakra-ui/react';\nimport Webcam from 'react-webcam';\nimport { useWeb3React } from '@web3-react/core';\nimport { MdFiberManualRecord, MdStop, MdSave } from 'react-icons/md';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashcamView() {\n  _s();\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const [recording, setRecording] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const {\n    account,\n    active\n  } = useWeb3React();\n  const toast = useToast();\n  useEffect(() => {\n    let interval;\n    if (recording) {\n      interval = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [recording]);\n  const startRecording = async () => {\n    if (!active) {\n      toast({\n        title: 'Wallet not connected',\n        description: 'Please connect your MetaMask wallet first.',\n        status: 'error',\n        duration: 5000\n      });\n      return;\n    }\n    chunksRef.current = [];\n    const stream = webcamRef.current.video.srcObject;\n    mediaRecorderRef.current = new MediaRecorder(stream, {\n      mimeType: 'video/webm'\n    });\n    mediaRecorderRef.current.ondataavailable = e => {\n      if (e.data.size > 0) {\n        chunksRef.current.push(e.data);\n      }\n    };\n    mediaRecorderRef.current.start(1000); // Collect data every second\n    setRecording(true);\n    setRecordingTime(0);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n  const saveRecording = async () => {\n    try {\n      const blob = new Blob(chunksRef.current, {\n        type: 'video/webm'\n      });\n      const file = new File([blob], 'dashcam.webm', {\n        type: 'video/webm'\n      });\n      const formData = new FormData();\n      formData.append('video', file);\n      formData.append('wallet_address', account);\n      formData.append('duration', recordingTime);\n      const result = await axios.post('http://localhost:5000/capture/video', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      toast({\n        title: 'Success!',\n        description: `Video saved and minted as NFT. Token ID: ${result.data.data.token_id}`,\n        status: 'success',\n        duration: 5000\n      });\n      chunksRef.current = [];\n      setRecordingTime(0);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message,\n        status: 'error',\n        duration: 5000\n      });\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\"\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        maxW: \"1280px\",\n        h: \"720px\",\n        bg: \"gray.800\",\n        borderRadius: \"lg\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          audio: true,\n          ref: webcamRef,\n          videoConstraints: videoConstraints,\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), recording && /*#__PURE__*/_jsxDEV(Badge, {\n          position: \"absolute\",\n          top: \"4\",\n          right: \"4\",\n          colorScheme: \"red\",\n          variant: \"solid\",\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            as: \"span\",\n            w: \"2\",\n            h: \"2\",\n            borderRadius: \"full\",\n            bg: \"red.500\",\n            mr: \"2\",\n            animation: \"blink 1s infinite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), \"Recording \", formatTime(recordingTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          position: \"absolute\",\n          bottom: \"4\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          w: \"90%\",\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Progress, {\n              value: recordingTime / (5 * 60) * 100,\n              w: \"100%\",\n              colorScheme: \"blue\",\n              bg: \"gray.700\",\n              borderRadius: \"full\",\n              display: recording ? 'block' : 'none'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              spacing: 4,\n              children: !recording ? /*#__PURE__*/_jsxDEV(Button, {\n                leftIcon: /*#__PURE__*/_jsxDEV(MdFiberManualRecord, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 31\n                }, this),\n                colorScheme: \"red\",\n                size: \"lg\",\n                onClick: startRecording,\n                children: \"Start Recording\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  leftIcon: /*#__PURE__*/_jsxDEV(MdStop, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 33\n                  }, this),\n                  colorScheme: \"red\",\n                  size: \"lg\",\n                  onClick: stopRecording,\n                  children: \"Stop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  leftIcon: /*#__PURE__*/_jsxDEV(MdSave, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 33\n                  }, this),\n                  colorScheme: \"blue\",\n                  size: \"lg\",\n                  onClick: saveRecording,\n                  children: \"Save & Mint\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray.400\",\n        children: active ? 'Record dashcam footage and mint it as an NFT' : 'Please connect your wallet to mint NFTs'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(DashcamView, \"IpMB4jVViuBa8TFEhMtsnrWvi5U=\", false, function () {\n  return [useWeb3React, useToast];\n});\n_c = DashcamView;\nexport default DashcamView;\nvar _c;\n$RefreshReg$(_c, \"DashcamView\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Box","Button","VStack","HStack","Text","useToast","Progress","Badge","Webcam","useWeb3React","MdFiberManualRecord","MdStop","MdSave","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DashcamView","_s","webcamRef","mediaRecorderRef","chunksRef","recording","setRecording","duration","setDuration","recordingTime","setRecordingTime","account","active","toast","interval","setInterval","prev","clearInterval","startRecording","title","description","status","current","stream","video","srcObject","MediaRecorder","mimeType","ondataavailable","e","data","size","push","start","stopRecording","stop","saveRecording","blob","Blob","type","file","File","formData","FormData","append","result","post","headers","token_id","error","message","formatTime","seconds","mins","Math","floor","secs","toString","padStart","videoConstraints","width","height","facingMode","children","spacing","align","w","maxW","h","bg","borderRadius","overflow","position","audio","ref","style","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","top","right","colorScheme","variant","display","alignItems","as","mr","animation","bottom","left","transform","value","leftIcon","onClick","color","_c","$RefreshReg$"],"sources":["/home/hrithik/scratch_proj/BlockSnap/frontend/src/pages/DashcamView.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  VStack,\n  HStack,\n  Text,\n  useToast,\n  Progress,\n  Badge,\n} from '@chakra-ui/react';\nimport Webcam from 'react-webcam';\nimport { useWeb3React } from '@web3-react/core';\nimport { MdFiberManualRecord, MdStop, MdSave } from 'react-icons/md';\nimport axios from 'axios';\n\nfunction DashcamView() {\n  const webcamRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const [recording, setRecording] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const { account, active } = useWeb3React();\n  const toast = useToast();\n\n  useEffect(() => {\n    let interval;\n    if (recording) {\n      interval = setInterval(() => {\n        setRecordingTime((prev) => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [recording]);\n\n  const startRecording = async () => {\n    if (!active) {\n      toast({\n        title: 'Wallet not connected',\n        description: 'Please connect your MetaMask wallet first.',\n        status: 'error',\n        duration: 5000,\n      });\n      return;\n    }\n\n    chunksRef.current = [];\n    const stream = webcamRef.current.video.srcObject;\n    mediaRecorderRef.current = new MediaRecorder(stream, {\n      mimeType: 'video/webm',\n    });\n\n    mediaRecorderRef.current.ondataavailable = (e) => {\n      if (e.data.size > 0) {\n        chunksRef.current.push(e.data);\n      }\n    };\n\n    mediaRecorderRef.current.start(1000); // Collect data every second\n    setRecording(true);\n    setRecordingTime(0);\n  };\n\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setRecording(false);\n  };\n\n  const saveRecording = async () => {\n    try {\n      const blob = new Blob(chunksRef.current, { type: 'video/webm' });\n      const file = new File([blob], 'dashcam.webm', { type: 'video/webm' });\n\n      const formData = new FormData();\n      formData.append('video', file);\n      formData.append('wallet_address', account);\n      formData.append('duration', recordingTime);\n\n      const result = await axios.post('http://localhost:5000/capture/video', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      toast({\n        title: 'Success!',\n        description: `Video saved and minted as NFT. Token ID: ${result.data.data.token_id}`,\n        status: 'success',\n        duration: 5000,\n      });\n\n      chunksRef.current = [];\n      setRecordingTime(0);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message,\n        status: 'error',\n        duration: 5000,\n      });\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"environment\"\n  };\n\n  return (\n    <Box>\n      <VStack spacing={8} align=\"center\">\n        <Box\n          w=\"100%\"\n          maxW=\"1280px\"\n          h=\"720px\"\n          bg=\"gray.800\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n          position=\"relative\"\n        >\n          <Webcam\n            audio={true}\n            ref={webcamRef}\n            videoConstraints={videoConstraints}\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n            }}\n          />\n          \n          {recording && (\n            <Badge\n              position=\"absolute\"\n              top=\"4\"\n              right=\"4\"\n              colorScheme=\"red\"\n              variant=\"solid\"\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <Box\n                as=\"span\"\n                w=\"2\"\n                h=\"2\"\n                borderRadius=\"full\"\n                bg=\"red.500\"\n                mr=\"2\"\n                animation=\"blink 1s infinite\"\n              />\n              Recording {formatTime(recordingTime)}\n            </Badge>\n          )}\n\n          <Box\n            position=\"absolute\"\n            bottom=\"4\"\n            left=\"50%\"\n            transform=\"translateX(-50%)\"\n            w=\"90%\"\n          >\n            <VStack spacing={4}>\n              <Progress\n                value={(recordingTime / (5 * 60)) * 100}\n                w=\"100%\"\n                colorScheme=\"blue\"\n                bg=\"gray.700\"\n                borderRadius=\"full\"\n                display={recording ? 'block' : 'none'}\n              />\n              \n              <HStack spacing={4}>\n                {!recording ? (\n                  <Button\n                    leftIcon={<MdFiberManualRecord />}\n                    colorScheme=\"red\"\n                    size=\"lg\"\n                    onClick={startRecording}\n                  >\n                    Start Recording\n                  </Button>\n                ) : (\n                  <>\n                    <Button\n                      leftIcon={<MdStop />}\n                      colorScheme=\"red\"\n                      size=\"lg\"\n                      onClick={stopRecording}\n                    >\n                      Stop\n                    </Button>\n                    <Button\n                      leftIcon={<MdSave />}\n                      colorScheme=\"blue\"\n                      size=\"lg\"\n                      onClick={saveRecording}\n                    >\n                      Save & Mint\n                    </Button>\n                  </>\n                )}\n              </HStack>\n            </VStack>\n          </Box>\n        </Box>\n\n        <Text color=\"gray.400\">\n          {active\n            ? 'Record dashcam footage and mint it as an NFT'\n            : 'Please connect your wallet to mint NFTs'}\n        </Text>\n      </VStack>\n    </Box>\n  );\n}\n\nexport default DashcamView; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}